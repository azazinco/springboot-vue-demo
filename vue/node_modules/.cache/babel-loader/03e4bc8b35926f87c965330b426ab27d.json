{"remainingRequest":"E:\\ideaWorkspace\\springboot-vue-practice\\vue\\node_modules\\babel-loader\\lib\\index.js!E:\\ideaWorkspace\\springboot-vue-practice\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!E:\\ideaWorkspace\\springboot-vue-practice\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ideaWorkspace\\springboot-vue-practice\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!E:\\ideaWorkspace\\springboot-vue-practice\\vue\\src\\views\\VideoDetail.vue?vue&type=template&id=1a4a7262&scoped=true","dependencies":[{"path":"E:\\ideaWorkspace\\springboot-vue-practice\\vue\\src\\views\\VideoDetail.vue","mtime":1653014175601},{"path":"E:\\ideaWorkspace\\springboot-vue-practice\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650794055925},{"path":"E:\\ideaWorkspace\\springboot-vue-practice\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1650794058243},{"path":"E:\\ideaWorkspace\\springboot-vue-practice\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1650794061710},{"path":"E:\\ideaWorkspace\\springboot-vue-practice\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650794055925},{"path":"E:\\ideaWorkspace\\springboot-vue-practice\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1650794060272}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi0xYTRhNzI2MiIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtMWE0YTcyNjIiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiZGVtbyIKfTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIChfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF92aWRlb19wbGF5ZXIgPSBfcmVzb2x2ZUNvbXBvbmVudCgidmlkZW8tcGxheWVyIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgbnVsbCwgW19jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X3ZpZGVvX3BsYXllciwgewogICAgY2xhc3M6ICJ2aWRlby1wbGF5ZXItYm94IiwKICAgIHJlZjogInZpZGVvUGxheWVyIiwKICAgIHBsYXlzaW5saW5lOiB0cnVlLAogICAgb3B0aW9uczogJGRhdGEucGxheWVyT3B0aW9ucwogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJvcHRpb25zIl0pXSldKTsKfSk7"},{"version":3,"sources":["E:\\ideaWorkspace\\springboot-vue-practice\\vue\\src\\views\\VideoDetail.vue"],"names":[],"mappings":";;;;;;;AAES,EAAA,KAAK,EAAC;;;;;;;;uBADb,YAAA,CAQM,KARN,EAQM,IARN,EAQM,CAPJ,YAAA,CAMM,KANN,EAAA,UAAA,EAMM,CALJ,YAAA,CAIe,uBAJf,EAIe;AAJD,IAAA,KAAK,EAAC,kBAIL;AAHD,IAAA,GAAG,EAAC,aAGH;AAFA,IAAA,WAAW,EAAE,IAEb;AADA,IAAA,OAAO,EAAE,KAAA,CAAA;AACT,GAJf,E,IAAA,E;;AAAA,I,WAAA,CAKI,CANN,CAOI,CARN,C","sourcesContent":["<template>\r\n  <div>\r\n    <div class='demo'>\r\n      <video-player class=\"video-player-box\"\r\n                    ref=\"videoPlayer\"\r\n                    :playsinline=\"true\"\r\n                    :options=\"playerOptions\">\r\n      </video-player>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport {videoPlayer} from 'vue-video-player'\r\nimport 'video.js/dist/video-js.css'\r\n\r\nexport default {\r\n  name: \"VideoDetail\",\r\n  components: {\r\n    videoPlayer,\r\n  },\r\n  data() {\r\n    return {\r\n      // id: this.$route.query.id\r\n      // video: {},\r\n      playerOptions: {\r\n        playbackRates: [0.5, 1.0, 1.5, 2.0], // 可选的播放速度\r\n        autoplay: true, // 如果为true,浏览器准备好时开始回放。\r\n        muted: false, // 默认情况下将会消除任何音频。\r\n        loop: false, // 是否视频一结束就重新开始。\r\n        preload: 'auto', // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\r\n        language: 'zh-CN',\r\n        aspectRatio: '16:9', // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\r\n        fluid: true, // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\r\n        sources: [{\r\n          type: \"video/mp4\", // 类型\r\n          src: '' // url地址\r\n        }],\r\n        poster: '', // 封面地址\r\n        notSupportedMessage: '此视频暂无法播放，请稍后再试', // 允许覆盖Video.js无法播放媒体源时显示的默认信息。\r\n        controlBar: {\r\n          timeDivider: true, // 当前时间和持续时间的分隔符\r\n          durationDisplay: true, // 显示持续时间\r\n          remainingTimeDisplay: true, // 是否显示剩余时间功能\r\n          fullscreenToggle: true // 是否显示全屏按钮\r\n        }\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    let id = this.$route.query.id;\r\n    request.get(\"/files/detail/\" + id).then(res => {\r\n      console.log(res.data.url)\r\n      // this.playerOptions.sources[0].src = res.data.url;\r\n    })\r\n  },\r\n  methods: {}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":""}]}